openapi: 3.0.0
info:
  title: My REST API
  version: 1.0.0
  description: A REST API to manage projects, tasks, teams, and users.
servers:
  - url: http://localhost:3000/
    description: Localhost development server

components:
  schemas:
    objectId:
      type: string
      pattern: '^[0-9a-fA-F]{24}$'
    Task:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        description:
          type: string
        column:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:

  # Auth routes
  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                username:
                  type: string
                  required: true
                  unique: true
                  lowercase: true
                mobile:
                  type: string
                  required: true
                  unique: true
                roles:
                  type: array
                  items:
                    type: string
                  default:
                    - "USER"
                email:
                  type: string
                  required: true
                  unique: true
                  lowercase: true
                password:
                  type: string
                  required: true
                confirm_password:
                  type: string
                  required: true
                  description: Should match the password field
                profile_image:
                  type: string
                  required: false
                skills:
                  type: array
                  items:
                    type: string
                  default: []
                teams:
                  type: array
                  items:
                    type: string
                    format: ObjectId
                  default: []
      responses:
        200:
          description: User successfully registered
        400:
          description: Bad request


  /auth/login:
    post:
      summary: Log in a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  required: true
                  unique: true
                  lowercase: true
                password:
                  type: string
                  required: true
      responses:
        200:
          description: User successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    properties:
                      _id:
                        type: string
                        format: ObjectId
                      username:
                        type: string
                      email:
                        type: string
                      roles:
                        type: array
                        items:
                          type: string
        400:
          description: Bad request
        401:
          description: Unauthorized

# Project routes

  /project/create:
    post:
      summary: Create a new project
      description: Creates a new project
      schema:
        type: string
      tags:
        - Project
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                  required: true
                description:
                  type: string
                image:
                  type: string
                  format: binary
                tags:
                  type: string
      responses:
        200:
          description: The project has been successfully created
        400:
          description: Bad request


  /project/list:
    get:
      summary: Get a list of all projects
      tags:
        - Project
      responses:
        200:
          description: A list of all projects

  /project/{id}:
    get:
      summary: Get a specific project by ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The project ID
      responses:
        200:
          description: The project with the specified ID
        404:
          description: Project not found

  /project/remove/{id}:
    delete:
      summary: Remove a project by ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The project ID
      responses:
        200:
          description: The project has been successfully removed
        404:
          description: Project not found

  /project/edit/{id}:
    put:
      summary: Update a project by ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The project ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                image:
                  type: string
                tags:
                  type: array
                  items:
                    type: string
      responses:
        200:
          description: The project has been successfully updated
        404:
          description: Project not found

  /project/edit-projectImage/{id}:
    patch:
      summary: Update a project's image by ID
      tags:
        - Project
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The project ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        200:
          description: The project's image has been successfully updated
        404:
          description: Project not found

  /project/{projectId}/tasks/create:
    post:
      tags:
        - Tasks
      summary: Create a new task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                columnId:
                  type: string
      responses:
        201:
          description: Task created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        400:
          description: Failed to create task
        404:
          description: Column not found

  /project/{projectId}/tasks/{taskId}:
    get:
      tags:
        - Tasks
      summary: Get a task by its ID
      parameters:
        - in: path
          name: projectId
          schema:
            type: string
          required: true
          description: The ID of the project
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: The ID of the task to be retrieved
      responses:
        200:
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found

  /project/{projectId}/tasks/{taskId}/update:
    put:
      tags:
        - Tasks
      summary: Update a task
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: The ID of the task to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
      responses:
        200:
          description: Task updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found

  /project/{projectId}/tasks/{taskId}/delete:
    delete:
      tags:
        - Tasks
      summary: Delete a task
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: The ID of the task to be deleted
      responses:
        200:
          description: Task deleted successfully
        404:
          description: Task not found

  /project/{projectId}/tasks/{taskId}/update-column:
    put:
      tags:
        - Tasks
      summary: Update the column of a task
      parameters:
        - in: path
          name: taskId
          schema:
            type: string
          required: true
          description: The ID of the task whose column is to be updated
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                columnId:
                  type: string
      responses:
        200:
          description: Task column updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        404:
          description: Task not found


  
